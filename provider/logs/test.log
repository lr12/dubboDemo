[INFO ] 2017-11-25 14:58:26,970(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 14:58:34,921(7951) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:35,354(8384) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,049(13079) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,182(13212) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,206(13236) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,224(13254) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,245(13275) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,245(13275) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,246(13276) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=12000&registry=zookeeper&timestamp=1511593120060, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,261(13291) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,285(13315) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,326(13356) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,367(13397) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,393(13423) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,455(13485) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,567(13597) --> [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69):  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.79.140:20880, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,581(13611) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,630(13660) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:232):  [DUBBO] Load registry store file C:\Users\lr12\.dubbo\dubbo-registry-localhost.cache, data: {nju.software.sjjh.mock.GsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.GsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.GsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426993, nju.software.sjjh.bank.facade.BankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.BankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.BankWebService&methods=requestAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713418087, nju.software.sjjh.webservice.IexportdtsService=empty://192.168.237.1:8892/nju.software.sjjh.webservice.IexportdtsService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.webservice.IexportdtsService&methods=login&organization=dubbox&owner=nju-software&pid=312&side=provider&timestamp=1501049192119, nju.software.sjjh.mock.ZsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.ZsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.ZsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427890, nju.software.sjjh.mock.NyyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.NyyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.NyyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427408, nju.software.sjjh.mock.JxgyWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.JxgyWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.JxgyWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427113, nju.software.sjjh.bank.facade.CourtToBankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.CourtToBankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.CourtToBankWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426536, nju.software.interfaces.service.ProviderService=empty://192.168.0.146:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12592&side=provider&timestamp=1511531491883}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:40,757(13787) --> [main] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[INFO ] 2017-11-25 14:58:40,762(13792) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64): Starting ZkClient event thread.  
[DEBUG] 2017-11-25 14:58:40,821(13851) --> [main] org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874): Awaiting connection to Zookeeper server  
[DEBUG] 2017-11-25 14:58:40,822(13852) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628): Waiting for keeper state SyncConnected  
[DEBUG] 2017-11-25 14:58:40,899(13929) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 14:58:40,900(13930) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 14:58:40,900(13930) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 14:58:40,901(13931) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638): State is SyncConnected  
[INFO ] 2017-11-25 14:58:40,903(13933) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,961(13991) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 14:58:40,987(14017) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:41,003(14033) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 14:58:41,024(14054) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:10:21,562(7914592) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:Disconnected type:None path:null  
[INFO ] 2017-11-25 17:10:21,570(7914600) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (Disconnected)  
[DEBUG] 2017-11-25 17:10:21,571(7914601) --> [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(ZkEventThread.java:88): New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:21,572(7914602) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 17:10:21,572(7914602) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:69): Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:21,573(7914603) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:79): Delivering event #1 done  
[DEBUG] 2017-11-25 17:10:22,311(7915341) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:Expired type:None path:null  
[INFO ] 2017-11-25 17:10:22,312(7915342) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (Expired)  
[DEBUG] 2017-11-25 17:10:22,312(7915342) --> [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(ZkEventThread.java:88): New event: ZkEvent[State changed to Expired sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:22,313(7915343) --> [main-EventThread] org.I0Itec.zkclient.ZkConnection.close(ZkConnection.java:77): Closing ZooKeeper connected to localhost:2181  
[DEBUG] 2017-11-25 17:10:22,314(7915344) --> [main-EventThread] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[DEBUG] 2017-11-25 17:10:22,313(7915343) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:69): Delivering event #2 ZkEvent[State changed to Expired sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:22,321(7915351) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:79): Delivering event #2 done  
[DEBUG] 2017-11-25 17:10:22,326(7915356) --> [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(ZkEventThread.java:88): New event: ZkEvent[New session event sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:22,326(7915356) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:69): Delivering event #3 ZkEvent[New session event sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:22,328(7915358) --> [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(ZkEventThread.java:88): New event: ZkEvent[Children of /dubbo/nju.software.interfaces.service.ProviderService/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@7e9199a8]  
[DEBUG] 2017-11-25 17:10:22,329(7915359) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[INFO ] 2017-11-25 17:10:22,330(7915360) --> [ZkClient-EventThread-21-localhost:2181] com.alibaba.dubbo.registry.support.FailbackRegistry.recover(FailbackRegistry.java:282):  [DUBBO] Recover register url [dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071], dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:10:22,338(7915368) --> [ZkClient-EventThread-21-localhost:2181] com.alibaba.dubbo.registry.support.FailbackRegistry.recover(FailbackRegistry.java:292):  [DUBBO] Recover subscribe url [provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071], dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:10:22,340(7915370) --> [DubboRegistryFailedRetryTimer-thread-1] com.alibaba.dubbo.registry.support.FailbackRegistry.retry(FailbackRegistry.java:309):  [DUBBO] Retry register [dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:10:22,345(7915375) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:79): Delivering event #3 done  
[DEBUG] 2017-11-25 17:10:22,349(7915379) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:69): Delivering event #4 ZkEvent[Children of /dubbo/nju.software.interfaces.service.ProviderService/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@7e9199a8]  
[DEBUG] 2017-11-25 17:10:23,035(7916065) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 17:10:23,037(7916067) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 17:10:23,037(7916067) --> [main-EventThread] org.I0Itec.zkclient.ZkEventThread.send(ZkEventThread.java:88): New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:23,038(7916068) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[INFO ] 2017-11-25 17:10:23,107(7916137) --> [ZkClient-EventThread-21-localhost:2181] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:10:23,113(7916143) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:79): Delivering event #4 done  
[DEBUG] 2017-11-25 17:10:23,113(7916143) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:69): Delivering event #5 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@d4b0bf6]  
[DEBUG] 2017-11-25 17:10:23,113(7916143) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:79): Delivering event #5 done  
[INFO ] 2017-11-25 17:10:23,117(7916147) --> [DubboRegistryFailedRetryTimer-thread-1] com.alibaba.dubbo.registry.support.FailbackRegistry.retry(FailbackRegistry.java:354):  [DUBBO] Retry subscribe {provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071=[com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener@5e002356]}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:10:23,129(7916159) --> [DubboRegistryFailedRetryTimer-thread-1] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071], dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:06,089(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 17:30:09,175(3086) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:09,406(3317) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,040(6951) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,135(7046) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,157(7068) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,179(7090) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,202(7113) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,203(7114) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6520&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602213067&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,204(7115) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6520&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602213067&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=6520&registry=zookeeper&timestamp=1511602213054, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,214(7125) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,242(7153) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,290(7201) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,326(7237) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,353(7264) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:30:13,412(7323) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,595(7506) --> [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:450):  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,598(7509) --> [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63):  [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:30:13,599(7510) --> [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76):  [DUBBO] Unexport service: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6520&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602213067&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:47,955(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 17:36:52,079(4124) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:52,331(4376) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:55,768(7813) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:55,852(7897) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:55,871(7916) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:55,891(7936) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:55,909(7954) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:55,910(7955) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:55,911(7956) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=8200&registry=zookeeper&timestamp=1511602615779, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:55,925(7970) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:55,942(7987) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:55,979(8024) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,005(8050) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,031(8076) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,093(8138) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,164(8209) --> [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69):  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.79.140:20880, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,173(8218) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,195(8240) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:232):  [DUBBO] Load registry store file C:\Users\lr12\.dubbo\dubbo-registry-localhost.cache, data: {nju.software.sjjh.mock.GsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.GsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.GsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426993, nju.software.sjjh.webservice.IexportdtsService=empty://192.168.237.1:8892/nju.software.sjjh.webservice.IexportdtsService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.webservice.IexportdtsService&methods=login&organization=dubbox&owner=nju-software&pid=312&side=provider&timestamp=1501049192119, nju.software.interfaces.service.ProviderService:1.0.1=empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=providers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=3440&revision=1.0.1&side=consumer&timestamp=1511602454538&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=3440&revision=1.0.1&side=consumer&timestamp=1511602454538&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=3440&revision=1.0.1&side=consumer&timestamp=1511602454538&version=1.0.1, nju.software.sjjh.bank.facade.CourtToBankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.CourtToBankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.CourtToBankWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426536, nju.software.sjjh.mock.NyyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.NyyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.NyyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427408, nju.software.sjjh.mock.ZsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.ZsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.ZsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427890, nju.software.interfaces.service.ProviderService=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, nju.software.sjjh.bank.facade.BankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.BankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.BankWebService&methods=requestAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713418087, nju.software.sjjh.mock.JxgyWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.JxgyWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.JxgyWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427113}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,217(8262) --> [main] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[INFO ] 2017-11-25 17:36:56,217(8262) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64): Starting ZkClient event thread.  
[DEBUG] 2017-11-25 17:36:56,288(8333) --> [main] org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874): Awaiting connection to Zookeeper server  
[DEBUG] 2017-11-25 17:36:56,289(8334) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628): Waiting for keeper state SyncConnected  
[DEBUG] 2017-11-25 17:36:56,329(8374) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 17:36:56,330(8375) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 17:36:56,330(8375) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 17:36:56,333(8378) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638): State is SyncConnected  
[INFO ] 2017-11-25 17:36:56,335(8380) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,369(8414) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,399(8444) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,413(8458) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:36:56,451(8496) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,478(8523) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,500(8545) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,500(8545) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,501(8546) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=8200&registry=zookeeper&timestamp=1511602616490, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,502(8547) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,524(8569) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:36:56,559(8604) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:01,206(73251) --> [DubboServerHandler-192.168.79.140:20880-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:02,287(74332) --> [DubboServerHandler-192.168.79.140:20880-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:03,304(75349) --> [DubboServerHandler-192.168.79.140:20880-thread-4] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:04,311(76356) --> [DubboServerHandler-192.168.79.140:20880-thread-5] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:05,317(77362) --> [DubboServerHandler-192.168.79.140:20880-thread-6] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:06,320(78365) --> [DubboServerHandler-192.168.79.140:20880-thread-7] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:07,343(79388) --> [DubboServerHandler-192.168.79.140:20880-thread-8] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:08,352(80397) --> [DubboServerHandler-192.168.79.140:20880-thread-9] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:09,357(81402) --> [DubboServerHandler-192.168.79.140:20880-thread-10] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:10,365(82410) --> [DubboServerHandler-192.168.79.140:20880-thread-11] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:11,370(83415) --> [DubboServerHandler-192.168.79.140:20880-thread-12] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:12,374(84419) --> [DubboServerHandler-192.168.79.140:20880-thread-13] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:13,380(85425) --> [DubboServerHandler-192.168.79.140:20880-thread-14] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:14,387(86432) --> [DubboServerHandler-192.168.79.140:20880-thread-15] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:15,394(87439) --> [DubboServerHandler-192.168.79.140:20880-thread-16] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:16,400(88445) --> [DubboServerHandler-192.168.79.140:20880-thread-17] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:17,406(89451) --> [DubboServerHandler-192.168.79.140:20880-thread-18] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:18,412(90457) --> [DubboServerHandler-192.168.79.140:20880-thread-19] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:19,418(91463) --> [DubboServerHandler-192.168.79.140:20880-thread-20] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:20,426(92471) --> [DubboServerHandler-192.168.79.140:20880-thread-21] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:21,432(93477) --> [DubboServerHandler-192.168.79.140:20880-thread-22] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:22,437(94482) --> [DubboServerHandler-192.168.79.140:20880-thread-23] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:23,443(95488) --> [DubboServerHandler-192.168.79.140:20880-thread-24] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:24,449(96494) --> [DubboServerHandler-192.168.79.140:20880-thread-25] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:25,454(97499) --> [DubboServerHandler-192.168.79.140:20880-thread-26] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:26,461(98506) --> [DubboServerHandler-192.168.79.140:20880-thread-27] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:27,469(99514) --> [DubboServerHandler-192.168.79.140:20880-thread-28] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:28,476(100521) --> [DubboServerHandler-192.168.79.140:20880-thread-29] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:29,481(101526) --> [DubboServerHandler-192.168.79.140:20880-thread-30] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:30,487(102532) --> [DubboServerHandler-192.168.79.140:20880-thread-31] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:31,499(103544) --> [DubboServerHandler-192.168.79.140:20880-thread-32] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:32,514(104559) --> [DubboServerHandler-192.168.79.140:20880-thread-33] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:33,523(105568) --> [DubboServerHandler-192.168.79.140:20880-thread-34] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:34,527(106572) --> [DubboServerHandler-192.168.79.140:20880-thread-35] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:35,533(107578) --> [DubboServerHandler-192.168.79.140:20880-thread-36] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:36,542(108587) --> [DubboServerHandler-192.168.79.140:20880-thread-37] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:37,549(109594) --> [DubboServerHandler-192.168.79.140:20880-thread-38] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:38,560(110605) --> [DubboServerHandler-192.168.79.140:20880-thread-39] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:39,582(111627) --> [DubboServerHandler-192.168.79.140:20880-thread-40] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:40,590(112635) --> [DubboServerHandler-192.168.79.140:20880-thread-41] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:41,598(113643) --> [DubboServerHandler-192.168.79.140:20880-thread-42] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:42,601(114646) --> [DubboServerHandler-192.168.79.140:20880-thread-43] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:43,643(115688) --> [DubboServerHandler-192.168.79.140:20880-thread-44] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:44,650(116695) --> [DubboServerHandler-192.168.79.140:20880-thread-45] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:45,655(117700) --> [DubboServerHandler-192.168.79.140:20880-thread-46] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:46,660(118705) --> [DubboServerHandler-192.168.79.140:20880-thread-47] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:47,664(119709) --> [DubboServerHandler-192.168.79.140:20880-thread-48] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:48,667(120712) --> [DubboServerHandler-192.168.79.140:20880-thread-49] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:49,673(121718) --> [DubboServerHandler-192.168.79.140:20880-thread-50] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:50,678(122723) --> [DubboServerHandler-192.168.79.140:20880-thread-51] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:51,682(123727) --> [DubboServerHandler-192.168.79.140:20880-thread-52] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:52,686(124731) --> [DubboServerHandler-192.168.79.140:20880-thread-53] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:53,694(125739) --> [DubboServerHandler-192.168.79.140:20880-thread-54] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:54,700(126745) --> [DubboServerHandler-192.168.79.140:20880-thread-55] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:55,712(127757) --> [DubboServerHandler-192.168.79.140:20880-thread-56] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:56,716(128761) --> [DubboServerHandler-192.168.79.140:20880-thread-57] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:57,720(129765) --> [DubboServerHandler-192.168.79.140:20880-thread-58] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:58,724(130769) --> [DubboServerHandler-192.168.79.140:20880-thread-59] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:38:59,730(131775) --> [DubboServerHandler-192.168.79.140:20880-thread-60] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:00,740(132785) --> [DubboServerHandler-192.168.79.140:20880-thread-61] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:01,745(133790) --> [DubboServerHandler-192.168.79.140:20880-thread-62] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:02,750(134795) --> [DubboServerHandler-192.168.79.140:20880-thread-63] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:03,755(135800) --> [DubboServerHandler-192.168.79.140:20880-thread-64] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:04,760(136805) --> [DubboServerHandler-192.168.79.140:20880-thread-65] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:05,765(137810) --> [DubboServerHandler-192.168.79.140:20880-thread-66] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:06,772(138817) --> [DubboServerHandler-192.168.79.140:20880-thread-67] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:07,776(139821) --> [DubboServerHandler-192.168.79.140:20880-thread-68] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:08,779(140824) --> [DubboServerHandler-192.168.79.140:20880-thread-69] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:09,784(141829) --> [DubboServerHandler-192.168.79.140:20880-thread-70] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:10,788(142833) --> [DubboServerHandler-192.168.79.140:20880-thread-71] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:11,793(143838) --> [DubboServerHandler-192.168.79.140:20880-thread-72] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:12,797(144842) --> [DubboServerHandler-192.168.79.140:20880-thread-73] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:13,802(145847) --> [DubboServerHandler-192.168.79.140:20880-thread-74] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 17:39:14,817(146862) --> [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:39:14,821(146866) --> [DubboServerHandler-192.168.79.140:20880-thread-76] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:60847,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:38,037(170082) --> [DubboServerHandler-192.168.79.140:20880-thread-78] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:39,071(171116) --> [DubboServerHandler-192.168.79.140:20880-thread-79] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:40,077(172122) --> [DubboServerHandler-192.168.79.140:20880-thread-80] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:41,087(173132) --> [DubboServerHandler-192.168.79.140:20880-thread-81] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:42,092(174137) --> [DubboServerHandler-192.168.79.140:20880-thread-82] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:43,096(175141) --> [DubboServerHandler-192.168.79.140:20880-thread-83] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:44,101(176146) --> [DubboServerHandler-192.168.79.140:20880-thread-84] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:45,106(177151) --> [DubboServerHandler-192.168.79.140:20880-thread-85] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:46,116(178161) --> [DubboServerHandler-192.168.79.140:20880-thread-86] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:47,123(179168) --> [DubboServerHandler-192.168.79.140:20880-thread-87] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:48,128(180173) --> [DubboServerHandler-192.168.79.140:20880-thread-88] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:49,133(181178) --> [DubboServerHandler-192.168.79.140:20880-thread-89] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:50,138(182183) --> [DubboServerHandler-192.168.79.140:20880-thread-90] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:51,146(183191) --> [DubboServerHandler-192.168.79.140:20880-thread-91] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:52,150(184195) --> [DubboServerHandler-192.168.79.140:20880-thread-92] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:53,154(185199) --> [DubboServerHandler-192.168.79.140:20880-thread-93] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:54,160(186205) --> [DubboServerHandler-192.168.79.140:20880-thread-94] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:55,165(187210) --> [DubboServerHandler-192.168.79.140:20880-thread-95] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:56,170(188215) --> [DubboServerHandler-192.168.79.140:20880-thread-96] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:57,174(189219) --> [DubboServerHandler-192.168.79.140:20880-thread-97] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:58,182(190227) --> [DubboServerHandler-192.168.79.140:20880-thread-98] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:39:59,187(191232) --> [DubboServerHandler-192.168.79.140:20880-thread-99] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:40:00,192(192237) --> [DubboServerHandler-192.168.79.140:20880-thread-100] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:40:01,196(193241) --> [DubboServerHandler-192.168.79.140:20880-thread-101] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:40:02,200(194245) --> [DubboServerHandler-192.168.79.140:20880-thread-102] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:40:03,204(195249) --> [DubboServerHandler-192.168.79.140:20880-thread-103] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:40:04,213(196258) --> [DubboServerHandler-192.168.79.140:20880-thread-104] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 17:40:05,220(197265) --> [DubboServerHandler-192.168.79.140:20880-thread-105] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 17:40:06,036(198081) --> [New I/O server worker #1-2] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 17:40:06,039(198084) --> [DubboServerHandler-192.168.79.140:20880-thread-107] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:60894,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:32,985(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 20:16:38,790(5805) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:39,350(6365) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:42,803(9818) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:42,878(9893) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:42,899(9914) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:42,918(9933) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:42,938(9953) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:42,939(9954) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:42,942(9957) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=9440&registry=zookeeper&timestamp=1511612202812, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:42,956(9971) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:42,972(9987) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,008(10023) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,039(10054) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,059(10074) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,122(10137) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,212(10227) --> [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69):  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.79.140:20880, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,221(10236) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,257(10272) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:232):  [DUBBO] Load registry store file C:\Users\lr12\.dubbo\dubbo-registry-localhost.cache, data: {nju.software.sjjh.mock.GsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.GsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.GsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426993, nju.software.interfaces.service.ProviderService:2.0.0=dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511602616491&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=14152&revision=2.0.0&side=consumer&timestamp=1511602776497&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=14152&revision=2.0.0&side=consumer&timestamp=1511602776497&version=2.0.0, nju.software.sjjh.webservice.IexportdtsService=empty://192.168.237.1:8892/nju.software.sjjh.webservice.IexportdtsService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.webservice.IexportdtsService&methods=login&organization=dubbox&owner=nju-software&pid=312&side=provider&timestamp=1501049192119, nju.software.interfaces.service.ProviderService:1.0.1=empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=providers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1, nju.software.sjjh.bank.facade.CourtToBankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.CourtToBankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.CourtToBankWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426536, nju.software.interfaces.service.ProviderService:1.0.0=dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8200&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511602615790&version=1.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=3896&revision=1.0.0&side=consumer&timestamp=1511602679711&version=1.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=3896&revision=1.0.0&side=consumer&timestamp=1511602679711&version=1.0.0, nju.software.sjjh.mock.NyyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.NyyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.NyyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427408, nju.software.sjjh.mock.ZsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.ZsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.ZsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427890, nju.software.interfaces.service.ProviderService=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, nju.software.sjjh.bank.facade.BankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.BankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.BankWebService&methods=requestAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713418087, nju.software.sjjh.mock.JxgyWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.JxgyWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.JxgyWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427113}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,286(10301) --> [main] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[INFO ] 2017-11-25 20:16:43,334(10349) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64): Starting ZkClient event thread.  
[DEBUG] 2017-11-25 20:16:43,358(10373) --> [main] org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874): Awaiting connection to Zookeeper server  
[DEBUG] 2017-11-25 20:16:43,359(10374) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628): Waiting for keeper state SyncConnected  
[DEBUG] 2017-11-25 20:16:43,397(10412) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 20:16:43,399(10414) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 20:16:43,401(10416) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 20:16:43,404(10419) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638): State is SyncConnected  
[INFO ] 2017-11-25 20:16:43,409(10424) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,444(10459) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,474(10489) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,488(10503) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:43,499(10514) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,521(10536) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,551(10566) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,552(10567) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,552(10567) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=9440&registry=zookeeper&timestamp=1511612203527, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,554(10569) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,573(10588) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:43,589(10604) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:54,246(21261) --> [DubboServerHandler-192.168.79.140:20880-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:55,317(22332) --> [DubboServerHandler-192.168.79.140:20880-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:56,323(23338) --> [DubboServerHandler-192.168.79.140:20880-thread-4] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:57,330(24345) --> [DubboServerHandler-192.168.79.140:20880-thread-5] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:58,334(25349) --> [DubboServerHandler-192.168.79.140:20880-thread-6] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:16:59,338(26353) --> [DubboServerHandler-192.168.79.140:20880-thread-7] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 20:16:59,624(26639) --> [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:16:59,629(26644) --> [DubboServerHandler-192.168.79.140:20880-thread-9] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:63411,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:10,744(157759) --> [DubboServerHandler-192.168.79.140:20880-thread-11] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:11,774(158789) --> [DubboServerHandler-192.168.79.140:20880-thread-12] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:12,780(159795) --> [DubboServerHandler-192.168.79.140:20880-thread-13] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:13,072(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 20:19:13,794(160809) --> [DubboServerHandler-192.168.79.140:20880-thread-14] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:14,799(161814) --> [DubboServerHandler-192.168.79.140:20880-thread-15] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:15,805(162820) --> [DubboServerHandler-192.168.79.140:20880-thread-16] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:15,937(2865) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:16,090(3018) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:16,820(163835) --> [DubboServerHandler-192.168.79.140:20880-thread-17] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:17,826(164841) --> [DubboServerHandler-192.168.79.140:20880-thread-18] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:18,835(165850) --> [DubboServerHandler-192.168.79.140:20880-thread-19] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:18,994(5922) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,069(5997) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,087(6015) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,476(6404) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:19,496(6424) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:19,497(6425) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=1508&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612359014&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:19,500(6428) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=1508&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612359014&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=1508&registry=zookeeper&timestamp=1511612359006, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,561(6489) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,583(6511) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,615(6543) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,645(6573) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,669(6597) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,732(6660) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:19,912(6840) --> [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:450):  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:19,915(6843) --> [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63):  [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:19:19,918(6846) --> [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76):  [DUBBO] Unexport service: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=1508&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612359014&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:19,927(166942) --> [DubboServerHandler-192.168.79.140:20880-thread-20] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:20,934(167949) --> [DubboServerHandler-192.168.79.140:20880-thread-21] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:21,937(168952) --> [DubboServerHandler-192.168.79.140:20880-thread-22] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:22,943(169958) --> [DubboServerHandler-192.168.79.140:20880-thread-23] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:23,950(170965) --> [DubboServerHandler-192.168.79.140:20880-thread-24] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:24,956(171971) --> [DubboServerHandler-192.168.79.140:20880-thread-25] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:25,960(172975) --> [DubboServerHandler-192.168.79.140:20880-thread-26] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:26,966(173981) --> [DubboServerHandler-192.168.79.140:20880-thread-27] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:27,972(174987) --> [DubboServerHandler-192.168.79.140:20880-thread-28] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:28,979(175994) --> [DubboServerHandler-192.168.79.140:20880-thread-29] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:29,982(176997) --> [DubboServerHandler-192.168.79.140:20880-thread-30] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:30,991(178006) --> [DubboServerHandler-192.168.79.140:20880-thread-31] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:31,998(179013) --> [DubboServerHandler-192.168.79.140:20880-thread-32] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:33,003(180018) --> [DubboServerHandler-192.168.79.140:20880-thread-33] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:34,007(181022) --> [DubboServerHandler-192.168.79.140:20880-thread-34] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:35,013(182028) --> [DubboServerHandler-192.168.79.140:20880-thread-35] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:36,019(183034) --> [DubboServerHandler-192.168.79.140:20880-thread-36] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:37,023(184038) --> [DubboServerHandler-192.168.79.140:20880-thread-37] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:38,027(185042) --> [DubboServerHandler-192.168.79.140:20880-thread-38] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:39,031(186046) --> [DubboServerHandler-192.168.79.140:20880-thread-39] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:40,036(187051) --> [DubboServerHandler-192.168.79.140:20880-thread-40] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:41,040(188055) --> [DubboServerHandler-192.168.79.140:20880-thread-41] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:42,046(189061) --> [DubboServerHandler-192.168.79.140:20880-thread-42] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:43,053(190068) --> [DubboServerHandler-192.168.79.140:20880-thread-43] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:44,056(191071) --> [DubboServerHandler-192.168.79.140:20880-thread-44] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:45,061(192076) --> [DubboServerHandler-192.168.79.140:20880-thread-45] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:46,066(193081) --> [DubboServerHandler-192.168.79.140:20880-thread-46] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:47,070(194085) --> [DubboServerHandler-192.168.79.140:20880-thread-47] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:48,077(195092) --> [DubboServerHandler-192.168.79.140:20880-thread-48] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:49,083(196098) --> [DubboServerHandler-192.168.79.140:20880-thread-49] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:50,086(197101) --> [DubboServerHandler-192.168.79.140:20880-thread-50] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:51,090(198105) --> [DubboServerHandler-192.168.79.140:20880-thread-51] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:52,118(199133) --> [DubboServerHandler-192.168.79.140:20880-thread-52] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:53,122(200137) --> [DubboServerHandler-192.168.79.140:20880-thread-53] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:54,129(201144) --> [DubboServerHandler-192.168.79.140:20880-thread-54] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:55,133(202148) --> [DubboServerHandler-192.168.79.140:20880-thread-55] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:56,137(203152) --> [DubboServerHandler-192.168.79.140:20880-thread-56] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:57,143(204158) --> [DubboServerHandler-192.168.79.140:20880-thread-57] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:58,147(205162) --> [DubboServerHandler-192.168.79.140:20880-thread-58] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:19:59,154(206169) --> [DubboServerHandler-192.168.79.140:20880-thread-59] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:00,160(207175) --> [DubboServerHandler-192.168.79.140:20880-thread-60] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:01,164(208179) --> [DubboServerHandler-192.168.79.140:20880-thread-61] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:02,168(209183) --> [DubboServerHandler-192.168.79.140:20880-thread-62] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:03,171(210186) --> [DubboServerHandler-192.168.79.140:20880-thread-63] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:04,174(211189) --> [DubboServerHandler-192.168.79.140:20880-thread-64] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:05,179(212194) --> [DubboServerHandler-192.168.79.140:20880-thread-65] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:06,183(213198) --> [DubboServerHandler-192.168.79.140:20880-thread-66] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:07,186(214201) --> [DubboServerHandler-192.168.79.140:20880-thread-67] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:08,191(215206) --> [DubboServerHandler-192.168.79.140:20880-thread-68] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:09,197(216212) --> [DubboServerHandler-192.168.79.140:20880-thread-69] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:20:10,201(217216) --> [DubboServerHandler-192.168.79.140:20880-thread-70] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 20:20:10,615(217630) --> [New I/O server worker #1-2] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:20:10,616(217631) --> [DubboServerHandler-192.168.79.140:20880-thread-72] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:63431,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:40,692(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 20:23:43,878(3186) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:44,271(3579) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:48,188(7496) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,286(7594) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,310(7618) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,337(7645) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:48,362(7670) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:48,363(7671) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:48,365(7673) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=6320&registry=zookeeper&timestamp=1511612628199, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,377(7685) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,401(7709) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,486(7794) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,521(7829) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,547(7855) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,618(7926) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:48,719(8027) --> [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69):  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.79.140:20880, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,730(8038) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:48,774(8082) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:232):  [DUBBO] Load registry store file C:\Users\lr12\.dubbo\dubbo-registry-localhost.cache, data: {nju.software.sjjh.mock.GsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.GsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.GsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426993, nju.software.interfaces.service.ProviderService:2.0.0=dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612203527&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12268&revision=2.0.0&side=consumer&timestamp=1511612349024&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12268&revision=2.0.0&side=consumer&timestamp=1511612349024&version=2.0.0, nju.software.sjjh.webservice.IexportdtsService=empty://192.168.237.1:8892/nju.software.sjjh.webservice.IexportdtsService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.webservice.IexportdtsService&methods=login&organization=dubbox&owner=nju-software&pid=312&side=provider&timestamp=1501049192119, nju.software.interfaces.service.ProviderService:1.0.1=empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=providers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1, nju.software.sjjh.bank.facade.CourtToBankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.CourtToBankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.CourtToBankWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426536, nju.software.interfaces.service.ProviderService:1.0.0=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=9440&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612202821&version=1.0.0, nju.software.sjjh.mock.NyyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.NyyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.NyyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427408, nju.software.sjjh.mock.ZsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.ZsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.ZsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427890, nju.software.interfaces.service.ProviderService=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, nju.software.sjjh.bank.facade.BankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.BankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.BankWebService&methods=requestAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713418087, nju.software.sjjh.mock.JxgyWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.JxgyWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.JxgyWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427113}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:48,804(8112) --> [main] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[INFO ] 2017-11-25 20:23:48,805(8113) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64): Starting ZkClient event thread.  
[DEBUG] 2017-11-25 20:23:49,123(8431) --> [main] org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874): Awaiting connection to Zookeeper server  
[DEBUG] 2017-11-25 20:23:49,124(8432) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628): Waiting for keeper state SyncConnected  
[DEBUG] 2017-11-25 20:23:49,176(8484) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 20:23:49,178(8486) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 20:23:49,178(8486) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 20:23:49,178(8486) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638): State is SyncConnected  
[INFO ] 2017-11-25 20:23:49,181(8489) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,259(8567) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,301(8609) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:49,317(8625) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:23:49,337(8645) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,381(8689) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,411(8719) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,412(8720) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,412(8720) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=6320&registry=zookeeper&timestamp=1511612629386, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,414(8722) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,458(8766) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:23:49,479(8787) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:26:57,520(196828) --> [DubboServerHandler-192.168.79.140:20880-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:26:58,570(197878) --> [DubboServerHandler-192.168.79.140:20880-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:26:59,578(198886) --> [DubboServerHandler-192.168.79.140:20880-thread-4] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:27:00,586(199894) --> [DubboServerHandler-192.168.79.140:20880-thread-5] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:27:01,592(200900) --> [DubboServerHandler-192.168.79.140:20880-thread-6] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:27:02,598(201906) --> [DubboServerHandler-192.168.79.140:20880-thread-7] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:27:03,603(202911) --> [DubboServerHandler-192.168.79.140:20880-thread-8] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:27:04,607(203915) --> [DubboServerHandler-192.168.79.140:20880-thread-9] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 20:27:05,377(204685) --> [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:27:05,383(204691) --> [DubboServerHandler-192.168.79.140:20880-thread-11] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:63802,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:24,558(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 20:30:29,609(5051) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:29,902(5344) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:33,854(9296) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:33,999(9441) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:34,019(9461) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:34,040(9482) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:34,066(9508) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:34,067(9509) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:34,068(9510) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=5484&registry=zookeeper&timestamp=1511613033866, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,470(10912) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,492(10934) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,581(11023) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,674(11116) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,731(11173) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,866(11308) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:35,975(11417) --> [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69):  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.79.140:20880, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:35,986(11428) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,012(11454) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:232):  [DUBBO] Load registry store file C:\Users\lr12\.dubbo\dubbo-registry-localhost.cache, data: {nju.software.sjjh.mock.GsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.GsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.GsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426993, nju.software.interfaces.service.ProviderService:2.0.0=dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511612629386&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8560&revision=2.0.0&side=consumer&timestamp=1511612816063&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8560&revision=2.0.0&side=consumer&timestamp=1511612816063&version=2.0.0, nju.software.sjjh.webservice.IexportdtsService=empty://192.168.237.1:8892/nju.software.sjjh.webservice.IexportdtsService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.webservice.IexportdtsService&methods=login&organization=dubbox&owner=nju-software&pid=312&side=provider&timestamp=1501049192119, nju.software.interfaces.service.ProviderService:1.0.1=empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=providers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1, nju.software.sjjh.bank.facade.CourtToBankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.CourtToBankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.CourtToBankWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426536, nju.software.interfaces.service.ProviderService:1.0.0=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=6320&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511612628213&version=1.0.0, nju.software.sjjh.mock.NyyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.NyyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.NyyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427408, nju.software.sjjh.mock.ZsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.ZsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.ZsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427890, nju.software.interfaces.service.ProviderService=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, nju.software.sjjh.bank.facade.BankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.BankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.BankWebService&methods=requestAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713418087, nju.software.sjjh.mock.JxgyWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.JxgyWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.JxgyWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427113}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:36,037(11479) --> [main] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[INFO ] 2017-11-25 20:30:36,038(11480) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64): Starting ZkClient event thread.  
[DEBUG] 2017-11-25 20:30:36,112(11554) --> [main] org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874): Awaiting connection to Zookeeper server  
[DEBUG] 2017-11-25 20:30:36,113(11555) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628): Waiting for keeper state SyncConnected  
[DEBUG] 2017-11-25 20:30:36,152(11594) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 20:30:36,152(11594) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 20:30:36,153(11595) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 20:30:36,154(11596) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638): State is SyncConnected  
[INFO ] 2017-11-25 20:30:36,158(11600) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,196(11638) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,218(11660) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:36,229(11671) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:36,241(11683) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,258(11700) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,292(11734) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,310(11752) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,310(11752) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=5484&registry=zookeeper&timestamp=1511613036264, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,313(11755) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,460(11902) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:36,476(11918) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:39,084(14526) --> [DubboServerHandler-192.168.79.140:20880-thread-2] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:40,139(15581) --> [DubboServerHandler-192.168.79.140:20880-thread-3] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:41,147(16589) --> [DubboServerHandler-192.168.79.140:20880-thread-4] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 20:30:41,904(17346) --> [New I/O server worker #1-1] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:30:41,907(17349) --> [DubboServerHandler-192.168.79.140:20880-thread-6] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:64151,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:30:59,699(35141) --> [DubboServerHandler-192.168.79.140:20880-thread-8] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:00,727(36169) --> [DubboServerHandler-192.168.79.140:20880-thread-9] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:01,733(37175) --> [DubboServerHandler-192.168.79.140:20880-thread-10] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:02,740(38182) --> [DubboServerHandler-192.168.79.140:20880-thread-11] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:03,748(39190) --> [DubboServerHandler-192.168.79.140:20880-thread-12] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:04,759(40201) --> [DubboServerHandler-192.168.79.140:20880-thread-13] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:05,764(41206) --> [DubboServerHandler-192.168.79.140:20880-thread-14] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:06,772(42214) --> [DubboServerHandler-192.168.79.140:20880-thread-15] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:07,776(43218) --> [DubboServerHandler-192.168.79.140:20880-thread-16] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:08,780(44222) --> [DubboServerHandler-192.168.79.140:20880-thread-17] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:09,789(45231) --> [DubboServerHandler-192.168.79.140:20880-thread-18] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:10,795(46237) --> [DubboServerHandler-192.168.79.140:20880-thread-19] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:11,802(47244) --> [DubboServerHandler-192.168.79.140:20880-thread-20] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:12,806(48248) --> [DubboServerHandler-192.168.79.140:20880-thread-21] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:13,809(49251) --> [DubboServerHandler-192.168.79.140:20880-thread-22] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:14,814(50256) --> [DubboServerHandler-192.168.79.140:20880-thread-23] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:15,821(51263) --> [DubboServerHandler-192.168.79.140:20880-thread-24] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:16,830(52272) --> [DubboServerHandler-192.168.79.140:20880-thread-25] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:17,836(53278) --> [DubboServerHandler-192.168.79.140:20880-thread-26] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:18,841(54283) --> [DubboServerHandler-192.168.79.140:20880-thread-27] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:19,848(55290) --> [DubboServerHandler-192.168.79.140:20880-thread-28] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:20,854(56296) --> [DubboServerHandler-192.168.79.140:20880-thread-29] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:21,858(57300) --> [DubboServerHandler-192.168.79.140:20880-thread-30] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:22,867(58309) --> [DubboServerHandler-192.168.79.140:20880-thread-31] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:23,871(59313) --> [DubboServerHandler-192.168.79.140:20880-thread-32] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:24,879(60321) --> [DubboServerHandler-192.168.79.140:20880-thread-33] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:25,888(61330) --> [DubboServerHandler-192.168.79.140:20880-thread-34] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:26,904(62346) --> [DubboServerHandler-192.168.79.140:20880-thread-35] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:27,912(63354) --> [DubboServerHandler-192.168.79.140:20880-thread-36] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:28,918(64360) --> [DubboServerHandler-192.168.79.140:20880-thread-37] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:29,923(65365) --> [DubboServerHandler-192.168.79.140:20880-thread-38] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:30,928(66370) --> [DubboServerHandler-192.168.79.140:20880-thread-39] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:31,934(67376) --> [DubboServerHandler-192.168.79.140:20880-thread-40] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:32,951(68393) --> [DubboServerHandler-192.168.79.140:20880-thread-41] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:33,957(69399) --> [DubboServerHandler-192.168.79.140:20880-thread-42] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:34,962(70404) --> [DubboServerHandler-192.168.79.140:20880-thread-43] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:31:35,973(71415) --> [DubboServerHandler-192.168.79.140:20880-thread-44] com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60):  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1  
[WARN ] 2017-11-25 20:31:36,666(72108) --> [New I/O server worker #1-2] com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197):  [DUBBO] All clients has discontected from /192.168.79.140:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:31:36,668(72110) --> [DubboServerHandler-192.168.79.140:20880-thread-46] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:130):  [DUBBO] disconected from /192.168.79.140:64164,url:dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&channel.readonly.sent=true&codec=dubbo&default.service.filter=consumerLogFilter&dubbo=2.5.3&heartbeat=60000&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:42,200(0) --> [main] : using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter  
[DEBUG] 2017-11-25 20:32:45,434(3234) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:45,653(3453) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,354(7154) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,472(7272) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,491(7291) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,521(7321) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,548(7348) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,548(7348) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613169383&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,550(7350) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613169383&version=1.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=8712&registry=zookeeper&timestamp=1511613169369, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,559(7359) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,584(7384) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,620(7420) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,646(7446) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,666(7466) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,714(7514) --> [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:70):  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,790(7590) --> [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69):  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.79.140:20880, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,800(7600) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,830(7630) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:232):  [DUBBO] Load registry store file C:\Users\lr12\.dubbo\dubbo-registry-localhost.cache, data: {nju.software.sjjh.mock.GsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.GsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.GsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426993, nju.software.interfaces.service.ProviderService:2.0.0=dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613036266&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=11384&revision=2.0.0&side=consumer&timestamp=1511613162451&version=2.0.0 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=11384&revision=2.0.0&side=consumer&timestamp=1511613162451&version=2.0.0, nju.software.sjjh.webservice.IexportdtsService=empty://192.168.237.1:8892/nju.software.sjjh.webservice.IexportdtsService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.webservice.IexportdtsService&methods=login&organization=dubbox&owner=nju-software&pid=312&side=provider&timestamp=1501049192119, nju.software.interfaces.service.ProviderService:1.0.1=empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=providers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=configurators&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1 empty://192.168.79.140/nju.software.interfaces.service.ProviderService?application=consumer1&category=routers&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12968&revision=1.0.1&side=consumer&timestamp=1511602642417&version=1.0.1, nju.software.sjjh.bank.facade.CourtToBankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.CourtToBankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.CourtToBankWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713426536, nju.software.interfaces.service.ProviderService:1.0.0=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=5484&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613033881&version=1.0.0, nju.software.sjjh.mock.NyyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.NyyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.NyyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427408, nju.software.sjjh.mock.ZsyhWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.ZsyhWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.ZsyhWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427890, nju.software.interfaces.service.ProviderService=empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=12000&retries=1&side=provider&timeout=3000&timestamp=1511593120071, nju.software.sjjh.bank.facade.BankWebService=empty://192.168.237.1:8892/nju.software.sjjh.bank.facade.BankWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.bank.facade.BankWebService&methods=requestAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713418087, nju.software.sjjh.mock.JxgyWebService=empty://192.168.237.1:8892/nju.software.sjjh.mock.JxgyWebService?anyhost=true&application=court-provider&category=configurators&check=false&dubbo=2.8.4&generic=false&interface=nju.software.sjjh.mock.JxgyWebService&methods=responseAsyncZhye&organization=dubbox&owner=nju-software&pid=15184&side=provider&timestamp=1500713427113}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:49,852(7652) --> [main] org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63): Creating new ZookKeeper instance to connect to localhost:2181.  
[INFO ] 2017-11-25 20:32:49,852(7652) --> [ZkClient-EventThread-21-localhost:2181] org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64): Starting ZkClient event thread.  
[DEBUG] 2017-11-25 20:32:49,900(7700) --> [main] org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874): Awaiting connection to Zookeeper server  
[DEBUG] 2017-11-25 20:32:49,901(7701) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628): Waiting for keeper state SyncConnected  
[DEBUG] 2017-11-25 20:32:49,927(7727) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351): Received event: WatchedEvent state:SyncConnected type:None path:null  
[INFO ] 2017-11-25 20:32:49,928(7728) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449): zookeeper state changed (SyncConnected)  
[DEBUG] 2017-11-25 20:32:49,928(7728) --> [main-EventThread] org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395): Leaving process event  
[DEBUG] 2017-11-25 20:32:49,930(7730) --> [main] org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638): State is SyncConnected  
[INFO ] 2017-11-25 20:32:49,932(7732) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613169383&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,968(7768) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613169383&version=1.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:49,995(7795) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613169383&version=1.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=1.0.0&side=provider&timeout=3000&timestamp=1511613169383&version=1.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:50,033(7833) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[DEBUG] 2017-11-25 20:32:50,043(7843) --> [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943):  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,056(7856) --> [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:107):  [DUBBO] The service ready on spring started. service: nju.software.interfaces.service.ProviderService, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,071(7871) --> [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:510):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,072(7872) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470):  [DUBBO] Export dubbo service nju.software.interfaces.service.ProviderService to url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613170062&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,072(7872) --> [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481):  [DUBBO] Register dubbo service nju.software.interfaces.service.ProviderService url dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613170062&version=2.0.0 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=doc-provider-app&dubbo=2.5.3&pid=8712&registry=zookeeper&timestamp=1511613170062, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,073(7873) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:302):  [DUBBO] Register: dubbo://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613170062&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,090(7890) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:325):  [DUBBO] Subscribe: provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613170062&version=2.0.0, dubbo version: 2.5.3, current host: 127.0.0.1  
[INFO ] 2017-11-25 20:32:50,114(7914) --> [main] com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:422):  [DUBBO] Notify urls for subscribe url provider://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613170062&version=2.0.0, urls: [empty://192.168.79.140:20880/nju.software.interfaces.service.ProviderService2?anyhost=true&application=doc-provider-app&category=configurators&check=false&default.service.filter=consumerLogFilter&dubbo=2.5.3&interface=nju.software.interfaces.service.ProviderService&methods=sayHello&pid=8712&retries=1&revision=2.0.0&side=provider&timeout=3000&timestamp=1511613170062&version=2.0.0], dubbo version: 2.5.3, current host: 127.0.0.1  
